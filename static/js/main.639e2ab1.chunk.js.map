{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialog-reducer.ts","components/Users/Users.module.css","api/api.ts","components/HOC/withAuthRedirect.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/Navbar/Navbar.tsx","components/Navbar/NavbarContainer.tsx","components/Users/Pagination.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","redux/user-reducer.ts","redux/user-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","components/HOC/withSuspense.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/common/FormsControls/FormsControls.module.css","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/Users/Pagination.module.css","components/Header/Header.module.css","redux/profile-reducer.ts","assets/images/abstract-user-flat-4.svg"],"names":["module","exports","initialState","dialogs","id","name","avatar","messagesText","messageText","from","dialogReducer","state","action","type","SEND_MESSAGE","newMessage","textMessage","sendMessageActionCreator","text","instance","axios","create","withCredentials","headers","baseURL","userAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollowUser","delete","followUser","post","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","userAuthAPI","getAuthMe","logIn","email","password","rememberMe","logOut","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","props","resProps","to","compose","className","classes","content","Navbar","itemFriendElements","friends","map","f","itemFriend","avatarFriend","src","nav","item","activeClassName","activeLink","arrayFriends","NavbarContainer","sidebar","Pagination","pagesCount","Math","ceil","totalUsersCount","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","filter","p","onPageChanged","selectedPage","User","user","ava","photos","large","userPhoto","followed","disabled","followingInProgress","some","n","unfollow","follow","Users","users","u","isFetching","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","idUser","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","getSelectorUsers","usersPage","getSelectorPageSize","getSelectorTotalUsersCount","getSelectorCurrentPage","getSelectorIsFetching","getSelectorFollowingInProgress","UsersContainer","pageNumber","setCurrentPage","this","Preloader","React","bind","items","totalUsers","totalCount","Header","header","loginBlock","login","logout","messages","fieldsErrors","setAuthUserData","getAuthUserData","HeaderAPIContainer","HeaderContainer","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","validate","required","placeholder","error","formCommonError","Login","res","message","length","stopSubmit","_error","formData","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","window","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","NetworkApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","preloader","Textarea","input","meta","touched","hasError","formControl","value","maxLengthCreator","maxLength","posts","like","profile","newPost","messagePost","addPost","setUserStatus","getUserProfile","getUserStatus","updateUserStatus"],"mappings":"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","file":"static/js/main.639e2ab1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\",\"friends\":\"Navbar_friends__3-QW_\",\"arrayFriends\":\"Navbar_arrayFriends__20iQN\",\"itemFriend\":\"Navbar_itemFriend__3Tcnx\",\"avatarFriend\":\"Navbar_avatarFriend__2k6Lb\"};","export type MessageTextType = {\n    id: number\n    messageText: string\n    from: string\n}\nexport type DialogPageType = {\n    dialogs: Array<DialogType>\n    messagesText: Array<MessageTextType>\n}\n\nexport type DialogType = {\n    id: number\n    name: string\n    avatar: string\n}\n\nconst initialState = {\n    dialogs: [\n        {\n            id: 1,\n            name: \"Nastya\",\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS0AfKY4bAlZOoZf1-lx6csbUt1LrtdMeuzLaiYapJPAVaLPdfBQSr1dOy5SRO8vev0BdE&usqp=CAU\"\n        },\n        {\n            id: 2,\n            name: \"Alex\",\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTH8C8VibswhLf3oI9Y-oEncHluuxKte7xvRw&usqp=CAU\"\n        },\n        {\n            id: 3,\n            name: \"Masha\",\n            avatar: \"https://s1.r29static.com/bin/entry/ab2/0,398,2000,2000/x,80/1648676/image.jpg\"\n        },\n        {\n            id: 4,\n            name: \"Dima\",\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThjiIep4R49K8xkJr_xQxVOXUvblr-wBlbGA&usqp=CAU\"\n        },\n        {\n            id: 5,\n            name: \"Lena\",\n            avatar: \"https://pyxis.nymag.com/v1/imgs/359/91f/8fc4e3abb6c8cc68ca9a3389e4b495165b-24-mr-robot.rsquare.w700.jpg\"\n        },\n    ],\n    messagesText: [\n        {id: 1, messageText: \"Hi!!!\", from: \"sender\"},\n        {id: 2, messageText: \"How are you?\", from: \"sender\"},\n        {id: 3, messageText: \"yoooooo\", from: \"receiver\"},\n        {id: 4, messageText: \"yo!\", from: \"receiver\"},\n    ],\n}\n\nexport const dialogReducer = (state: DialogPageType = initialState, action: ActionTypeDialogReducer): DialogPageType => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            const newMessage = {id: 4, messageText: action.textMessage, from: \"receiver\"}\n            return {\n                ...state,\n                messagesText: [...state.messagesText, newMessage],\n            }\n    }\n    return state\n}\n\nconst SEND_MESSAGE = \"SEND-MESSAGE\"\n\nexport type ActionTypeDialogReducer = ReturnType<typeof sendMessageActionCreator>\n\nexport const sendMessageActionCreator = (text: string) => {\n    return {\n        type: \"SEND-MESSAGE\",\n        textMessage: text\n    } as const\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Users_ava__dN1VK\"};","import axios, {AxiosResponse} from \"axios\";\nimport {UserProfileDataType} from \"../redux/profile-reducer\";\nimport {AuthMeResponseType, DataTypeAuthMe} from \"../redux/auth-reducer\";\n\nconst instance = axios.create(\n    {\n        withCredentials: true,\n        headers: {\"API-KEY\": \"24771d0b-afb6-4f59-ba2e-1f7f77002e3d\"},\n        baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    }\n)\n\nexport const userAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    unfollowUser(id: number) {\n        return instance.delete(`follow/${id}`)\n            .then(response => response.data)\n    },\n    followUser(id: number) {\n        return instance.post(`follow/${id}`)\n            .then(response => response.data)\n    },\n    getProfile(userId: string) {\n        console.warn(\"Obsolete method. Please profileAPI object\")\n        return profileAPI.getProfile(userId)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId: string) {\n        return instance.get<UserProfileDataType>(`profile/` + userId)\n    },\n    getStatus(userId: string) {\n        return instance.get<string>(`/profile/status/` + userId)\n    },\n    updateStatus(status: string) {\n        return instance.put<string, AxiosResponse<ResponseType>>('/profile/status', {\n            status\n        })\n    }\n}\n\nexport const userAuthAPI = {\n    getAuthMe() {\n        return instance.get<ResponseType<DataTypeAuthMe>>(`auth/me`)\n    },\n    logIn(email: string, password: string, rememberMe: boolean) {\n        return instance.post<{ userId: number }, AxiosResponse<ResponseType<{ userId: number }>>>(`auth/login`, {\n            email,\n            password,\n            rememberMe\n        })\n    },\n    logOut() {\n        return instance.delete<ResponseType>(`auth/login`)\n    },\n}\n\nexport type ResponseType<D = {}> = {\n    resultCode: number\n    messages: Array<string>\n    data: D\n}\n\n\n\n\n\n\n\n\n\n\n\n/*\n// api\nexport const todolistsAPI = {\n    getTodolists() {\n        return instance.get<TodolistType[]>('todo-lists');\n    },\n    createTodolist(title: string) {\n        return instance.post<{ title: string }, AxiosResponse<ResponseType<{ item: TodolistType }>>>('todo-lists', {title});\n    },\n    deleteTodolist(id: string) {\n        return instance.delete<ResponseType>(`todo-lists/${id}`);\n    },\n    updateTodolist(id: string, title: string) {\n        return instance.put<{ title: string }, AxiosResponse<ResponseType>>(`todo-lists/${id}`, {title});\n    },\n    getTasks(todolistId: string) {\n        return instance.get<GetTasksResponse>(`todo-lists/${todolistId}/tasks`);\n    },\n    deleteTask(todolistId: string, taskId: string) {\n        return instance.delete<ResponseType>(`todo-lists/${todolistId}/tasks/${taskId}`);\n    },\n    createTask(todolistId: string, title: string) {\n        return instance.post<{ title: string }, AxiosResponse<ResponseType<{ item: TaskType }>>>(`todo-lists/${todolistId}/tasks`, {title});\n    },\n    updateTask(todolistId: string, taskId: string, model: UpdateTaskModelType) {\n        return instance.put<UpdateTaskModelType, AxiosResponse<ResponseType<{ item: TaskType }>>>(`todo-lists/${todolistId}/tasks/${taskId}`, model);\n    }\n}*/\n","import React, {ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\n\ntype MapStateToPropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: MapStateToPropsType) => {\n        const {isAuth, ...resProps} = props\n        if (!isAuth) return <Redirect to={\"/login\"}/>\n        return <Component {...resProps as T}/>\n    }\n\n    const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n    return ConnectedRedirectComponent\n}","import React, {ComponentType} from 'react';\nimport classes from './Music.module.css';\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst Music = () => {\n    return (\n        <div className={classes.content}>Music</div>\n    )\n}\n\nexport default compose<ComponentType>(withAuthRedirect)(Music);","import React, {ComponentType} from 'react';\nimport classes from './News.module.css';\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst News = () => {\n    return (\n        <div className={classes.content}>News</div>\n    )\n}\n\nexport default compose<ComponentType>(withAuthRedirect)(News);","import React, {ComponentType} from 'react';\nimport classes from './Settings.module.css';\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst Settings = () => {\n    return (\n        <div className={classes.content}>Settings</div>\n    )\n}\n\nexport default compose<ComponentType>(withAuthRedirect)(Settings);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Navbar.module.css';\nimport {NavbarPropsType} from \"./NavbarContainer\";\n\n\nconst Navbar= (props:NavbarPropsType) => {\n\n    const itemFriendElements = props.friends.map(f => <div key={f.id} className={classes.itemFriend}>\n        <img className={classes.avatarFriend} src={f.avatar}/>\n    </div>)\n\n\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.item}><NavLink to='/profile' activeClassName={classes.activeLink}>Profile</NavLink></div>\n            <div className={classes.item}><NavLink to='/dialogs' activeClassName={classes.activeLink}>Messages</NavLink></div>\n            <div className={classes.item}><NavLink to='/news' activeClassName={classes.activeLink}>News</NavLink></div>\n            <div className={classes.item}><NavLink to='/users' activeClassName={classes.activeLink}>Users</NavLink></div>\n            <div className={classes.item}><NavLink to='/music'activeClassName={classes.activeLink}>Music</NavLink></div>\n            <div className={classes.item}><NavLink to='/settings' activeClassName={classes.activeLink}>Settings</NavLink></div>\n\n            <div className={classes.friends}>\n\n                <NavLink to='/friends' activeClassName={classes.activeLink}><h3>Friends</h3></NavLink>\n                <div className={classes.arrayFriends}>\n\n                    {itemFriendElements}\n\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport Navbar from \"./Navbar\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {FriendType} from \"../../redux/sidebar-reducer\";\n\ntype MapStateToPropsType = {\n    friends: FriendType[];\n}\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n    return {\n        friends: state.sidebar.friends\n    }\n};\n\nexport type NavbarPropsType = MapStateToPropsType\n\nexport const NavbarContainer = connect(mapStateToProps)(Navbar)","import React, {useState} from 'react';\nimport classes from './Pagination.module.css'\n\ntype PropsType = {\n    totalUsersCount: number\n    pageSize: number\n    onPageChanged: (pageNumber: number) => void\n    currentPage: number\n    portionSize: number\n}\n\nexport const Pagination = (props: PropsType) => {\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    const pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    const portionCount = Math.ceil(pagesCount / props.portionSize)\n    const [portionNumber, setPortionNumber] = useState(1)\n    const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\n    const rightPortionPageNumber = portionNumber * props.pageSize\n\n    return (\n        <div className={classes.pagination}>\n            {portionNumber > 1 &&\n            <button onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>❮</button>}\n            {\n                pages\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                    .map(p => <span\n                        onClick={() => props.onPageChanged(p)}\n                        className={props.currentPage === p ? classes.selectedPage : ''}>{` ${p} `}</span>)\n            }\n            {portionCount > portionNumber &&\n            <button onClick={() => {\n                setPortionNumber(portionNumber + 1)\n            }}>❯</button>}\n        </div>\n    )\n}","import React from 'react';\nimport classes from './../Users.module.css'\nimport userPhoto from './../../../assets/images/abstract-user-flat-4.svg'\nimport {NavLink} from 'react-router-dom';\nimport {UserType} from \"../../../redux/user-reducer\";\n\ntype PropsType = {\n    user: UserType\n    unfollow: (userId: number) => void\n    follow: (userId: number) => void\n    followingInProgress: number[]\n}\n\nexport const User = (props: PropsType) => {\n    return (\n        <div>\n            <span>\n                <div>\n                   <NavLink to={'/profile/' + props.user.id}>\n                     <img className={classes.ava} src={props.user.photos.large ? props.user.photos.large : userPhoto}/>\n                   </NavLink>\n                </div>\n                <div>\n                   {props.user.followed\n                       ? <button disabled={props.followingInProgress.some(n => n === props.user.id)}\n                                 onClick={() => props.unfollow(props.user.id)}>Unfollow</button>\n                       : <button disabled={props.followingInProgress.some(n => n === props.user.id)}\n                                 onClick={() => props.follow(props.user.id)}>Follow</button>\n                   }\n                 </div>\n                 </span>\n            <span>\n                       <span>\n                           <div>{props.user.name}</div>\n                           <div>{props.user.status}</div>\n                       </span>\n                       <span>\n                            <div>{\"u.location.country\"}</div>\n                            <div>{\"u.location.city\"}</div>\n                       </span>\n                    </span>\n        </div>\n    )\n}\n","import React from 'react';\nimport {UserType} from \"../../redux/user-reducer\";\nimport {Pagination} from \"./Pagination\";\nimport {User} from \"./User/User\";\n\ntype PropsType = {\n    totalUsersCount: number\n    pageSize: number\n    onPageChanged: (pageNumber: number) => void\n    currentPage: number\n    users: UserType[]\n    unfollow: (userId: number) => void\n    follow: (userId: number) => void\n    followingInProgress: number[]\n}\n\nexport const Users = (props: PropsType) => {\n\n    return (\n        <div>\n            <Pagination totalUsersCount={props.totalUsersCount}\n                        currentPage={props.currentPage}\n                        onPageChanged={props.onPageChanged}\n                        pageSize={props.pageSize}\n                        portionSize={10}\n            />\n\n            <div>\n                {props.users.map(u => <User key={u.id}\n                                            follow={props.follow}\n                                            followingInProgress={props.followingInProgress}\n                                            unfollow={props.unfollow}\n                                            user={u}/>)\n                }\n            </div>\n        </div>\n    )\n}","import {userAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\"\n\nexport type PhotosType = {\n    \"small\": null | string\n    \"large\": null | string\n}\n\nexport type UserType = {\n    \"name\": string\n    \"id\": number\n    \"uniqueUrlName\": null | string\n    \"photos\": PhotosType\n    \"status\": null | string\n    \"followed\": boolean\n}\n\ntype InitialStateType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\n\nconst initialState: InitialStateType = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n}\n\nexport const userReducer = (state: InitialStateType = initialState, action: ActionTypeUserReducer): InitialStateType => {\n    switch (action.type) {\n        case \"FOLLOW\": {\n            return {...state, users: state.users.map(u => u.id === action.id ? {...u, followed: true} : u)}\n        }\n        case \"UNFOLLOW\": {\n            return {...state, users: state.users.map(u => u.id === action.id ? {...u, followed: false} : u)}\n        }\n        case \"SET-USERS\": {\n            return {...state, users: [...action.users]}\n        }\n        case \"SET-CURRENT-PAGE\": {\n            return {...state, currentPage: action.currentPage}\n        }\n        case \"SET-TOTAL-USERS-COUNT\": {\n            return {...state, totalUsersCount: action.totalUsers}\n        }\n        case \"TOGGLE-IS-FETCHING\": {\n            return {...state, isFetching: action.isFetching}\n        }\n        case \"TOGGLE-FOLLOWING-PROGRESS\": {\n            return {\n                ...state, followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.idUser]\n                    : state.followingInProgress.filter(n => n !== action.idUser)\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport type ActionTypeUserReducer =\n    FollowAT\n    | UnfollowAT\n    | SetUsersAT\n    | SetCurrentPageAT\n    | SetTotalUsersCountAT\n    | ToggleIsFetchingAT\n    | toggleFollowingProgressAT\n\ntype FollowAT = ReturnType<typeof followSuccess>\ntype UnfollowAT = ReturnType<typeof unfollowSuccess>\ntype SetUsersAT = ReturnType<typeof setUsers>\ntype SetCurrentPageAT = ReturnType<typeof setCurrentPage>\ntype SetTotalUsersCountAT = ReturnType<typeof setTotalUsersCount>\ntype ToggleIsFetchingAT = ReturnType<typeof toggleIsFetching>\ntype toggleFollowingProgressAT = ReturnType<typeof toggleFollowingProgress>\n\nexport const followSuccess = (id: number) => {\n    return {\n        type: \"FOLLOW\",\n        id\n    } as const\n}\n\nexport const unfollowSuccess = (id: number) => {\n    return {\n        type: \"UNFOLLOW\",\n        id\n    } as const\n}\n\nexport const setUsers = (users: Array<UserType>) => {\n    return {\n        type: \"SET-USERS\",\n        users: users\n    } as const\n}\n\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: \"SET-CURRENT-PAGE\",\n        currentPage\n    } as const\n}\n\nexport const setTotalUsersCount = (totalUsers: number) => {\n    return {\n        type: \"SET-TOTAL-USERS-COUNT\",\n        totalUsers\n    } as const\n}\n\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: \"TOGGLE-IS-FETCHING\",\n        isFetching\n    } as const\n}\n\nexport const toggleFollowingProgress = (isFetching: boolean, idUser: number) => {\n    return {\n        type: \"TOGGLE-FOLLOWING-PROGRESS\",\n        isFetching,\n        idUser,\n    } as const\n}\n\nexport const getUsers = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFetching(true))\n    const data = await userAPI.getUsers(currentPage, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n\n}\n\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\n    dispatch(toggleFollowingProgress(true, userId))\n    const data = await apiMethod(userId)\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n}\n\n\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\n    await followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userAPI), followSuccess)\n}\n\n\nexport const unfollow = (userId: number) => async (dispatch: Dispatch) => {\n    await followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI), unfollowSuccess)\n}\n","import {StateType} from \"./redux-store\";\n\nexport const getSelectorUsers = (state: StateType) => {\n    debugger\n    return state.usersPage.users\n}\n\nexport const getSelectorPageSize = (state: StateType) => {\n    return state.usersPage.pageSize\n}\nexport const getSelectorTotalUsersCount = (state: StateType) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getSelectorCurrentPage = (state: StateType) => {\n    return state.usersPage.currentPage\n}\nexport const getSelectorIsFetching = (state: StateType) => {\n    return state.usersPage.isFetching\n}\nexport const getSelectorFollowingInProgress = (state: StateType) => {\n    return state.usersPage.followingInProgress\n}","import React, {ComponentType} from 'react';\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {Users} from \"./Users\";\nimport {\n    follow, getUsers,\n    setCurrentPage, setTotalUsersCount,\n    setUsers, toggleFollowingProgress, toggleIsFetching,\n    unfollow,\n    UserType\n} from \"../../redux/user-reducer\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getSelectorUsers,\n    getSelectorCurrentPage,\n    getSelectorFollowingInProgress,\n    getSelectorIsFetching,\n    getSelectorPageSize,\n    getSelectorTotalUsersCount\n} from \"../../redux/user-selectors\";\n\n\ntype MapStareToPropsType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\ntype MapDispatchToPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setCurrentPage: (currentPage: number) => void\n    toggleFollowingProgress: (isFetching: boolean, idUser: number) => void\n    getUsers: (currentPage: number, pageSize: number) => void\n}\n\nexport type UserPropsType = MapStareToPropsType & MapDispatchToPropsType\n\n\nclass UsersContainer extends React.Component<UserPropsType> {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props\n        this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        const {pageSize} = this.props\n        this.props.getUsers(pageNumber, pageSize)\n        this.props.setCurrentPage(pageNumber)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching && <Preloader/>}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   onPageChanged={this.onPageChanged}\n                   currentPage={this.props.currentPage}\n                   users={this.props.users}\n                   unfollow={this.props.unfollow}\n                   follow={this.props.follow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\n/*const mapStareToProps = (state: StateType): MapStareToPropsType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress,\n    }\n}*/\n\nconst mapStareToProps = (state: StateType): MapStareToPropsType => {\n    return {\n        users: getSelectorUsers(state),\n        pageSize: getSelectorPageSize(state),\n        totalUsersCount: getSelectorTotalUsersCount(state),\n        currentPage: getSelectorCurrentPage(state),\n        isFetching: getSelectorIsFetching(state),\n        followingInProgress: getSelectorFollowingInProgress(state),\n    }\n}\n\nexport default compose<ComponentType>(\n    withAuthRedirect,\n    connect(mapStareToProps,\n        {\n            follow: follow,\n            unfollow: unfollow,\n            setCurrentPage,\n            toggleFollowingProgress,\n            getUsers\n        }))(UsersContainer)\n\n\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport classes from './Header.module.css';\nimport {PropsType} from \"./HeaderContainer\";\n\nexport const Header = (props: PropsType) => {\n    return (\n        <header className={classes.header}>\n            <div className={classes.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.data?.login} - <button onClick={props.logout}>Logout</button></div>\n                    : <NavLink to={'/login'}>LOGIN</NavLink>}\n            </div>\n            <img\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPHRvtFUvNT9Rrpz2HE4gu05hPPg8m7DweCg&usqp=CAU'/>\n\n\n        </header>\n    )\n}","import {Dispatch} from \"redux\";\nimport {userAuthAPI} from \"../api/api\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {StateType} from \"./redux-store\";\nimport {FormAction, stopSubmit} from \"redux-form\";\n\nexport type DataTypeAuthMe = {\n    id: number | null\n    login: string | null\n    email: string | null\n}\nexport type AuthMeResponseType = {\n    data: DataTypeAuthMe | null\n    messages: [] | null\n    fieldsErrors: [] | null\n    resultCode: number | null\n}\n\ntype InitialStateType = {\n    data: DataTypeAuthMe | null\n    messages: [] | null\n    fieldsErrors: [] | null\n    resultCode: number | null\n    isAuth: boolean\n}\n\nconst initialState: InitialStateType = {\n    data: null,\n    messages: null,\n    fieldsErrors: null,\n    resultCode: null,\n    isAuth: false,\n}\n\nexport const AuthReducer = (state: InitialStateType = initialState, action: ActionTypeAuthReducer): InitialStateType => {\n    switch (action.type) {\n        case \"auth/SET-AUTH-USER-DATA\": {\n            return {...state, data: action.data, isAuth: true}\n        }\n        default:\n            return state\n    }\n}\n\nexport type ActionTypeAuthReducer = SetAuthUserDataAT\ntype SetAuthUserDataAT = ReturnType<typeof setAuthUserData>\n\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean) => {\n    return {\n        type: \"auth/SET-AUTH-USER-DATA\",\n        data: {\n            id,\n            login,\n            email,\n            isAuth\n        }\n    } as const\n}\n\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\n    const response = await userAuthAPI.getAuthMe()\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data\n        dispatch(setAuthUserData(id, login, email, true))\n    }\n}\n\ntype ThunkType = ThunkAction<void, StateType, unknown, ActionTypeAuthReducer | FormAction>\n\nexport const login = (email: string, password: string, rememberMe: boolean): ThunkType => async (dispatch) => {\n    const res = await userAuthAPI.logIn(email, password, rememberMe)\n    if (res.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : \"Error\"\n        dispatch(stopSubmit(\"Login\", {_error: message}))\n    }\n}\n\nexport const logout = () => async (dispatch: Dispatch) => {\n    const res = await userAuthAPI.logOut()\n    if (res.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}","import React from 'react';\nimport {Header} from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {DataTypeAuthMe, logout} from \"../../redux/auth-reducer\";\nimport {StateType} from \"../../redux/redux-store\";\n\n\ntype MapStareToPropsType = {\n    data: DataTypeAuthMe | null\n    isAuth: boolean\n}\ntype MapDispatchToPropsType = {\n    logout: () => void\n}\n\nexport type PropsType = MapStareToPropsType & MapDispatchToPropsType\n\nexport class HeaderAPIContainer extends React.Component<PropsType> {\n    render() {\n        return <Header {...this.props}/>;\n    }\n}\n\nconst mapStateToProps = (state: StateType): MapStareToPropsType => {\n    return {\n        data: state.auth.data,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const HeaderContainer = connect(mapStateToProps, {logout})(HeaderAPIContainer)","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport classes from \"./../common/FormsControls/FormsControls.module.css\";\n\nexport type FormDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Input}\n                       validate={[required]}\n                       placeholder={\"email\"}\n                       name={\"email\"}\n                />\n            </div>\n            <div>\n                <Field component={Input}\n                       validate={[required]}\n                       placeholder={\"password\"}\n                       name={\"password\"}\n                       type={\"password\"}/>\n            </div>\n            <div>\n                <Field component={\"input\"} type={\"checkbox\"} name={\"rememberMe\"}/>Remember me\n            </div>\n            {props.error && <div className={classes.formCommonError}>{props.error}</div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n\n}\n\nexport const LoginReduxForm = reduxForm<FormDataType>({form: \"Login\"})(LoginForm)","import React from 'react';\nimport {FormDataType, LoginReduxForm} from \"./LoginForm\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {StateType} from \"../../redux/redux-store\";\n\n\nconst Login1 = (props: LoginPropsType) => {\n\n    const onSubmit = (formData: FormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n        if(props.isAuth){\n            return <Redirect to={\"/profile\"}/>\n        }\n\n    return (\n        <div>\n\n            <h3>LOGIN</h3>\n            <LoginReduxForm onSubmit={onSubmit}/>\n\n        </div>\n    )\n}\n\ntype MapStareToPropsType = {\n    isAuth: boolean\n}\n\nconst mapStareToProps = (state: StateType): MapStareToPropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\ntype MapDispatchToPropsType = {\n    login: (email: string, password: string, rememberMe: boolean) => void\n}\n\nexport type LoginPropsType = MapStareToPropsType & MapDispatchToPropsType\n\n\nexport const Login = connect(mapStareToProps, {login})(Login1)","import {ThunkAction} from \"redux-thunk\";\nimport {StateType} from \"./redux-store\";\nimport {ActionTypeAuthReducer, getAuthUserData} from \"./auth-reducer\";\n\n\ntype InitialStateType = {\n    initialized: boolean\n}\n\nconst initialState: InitialStateType = {\n    initialized: false\n\n}\n\nexport const appReducer = (state: InitialStateType = initialState, action: ActionTypeAppReducer): InitialStateType => {\n    switch (action.type) {\n        case \"INITIALIZED-SUCCESS\":\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state\n    }\n}\n\nexport type ActionTypeAppReducer = SetInitializedType\ntype SetInitializedType = ReturnType<typeof initializedSuccess>\n\nexport const initializedSuccess = () => {\n    return {\n        type: \"INITIALIZED-SUCCESS\"\n    } as const\n}\ntype ThunkType = ThunkAction<void, StateType, unknown, ActionTypeAuthReducer | ActionTypeAppReducer>\n\nexport const initializeApp = (): ThunkType => {\n    return (dispatch) => {\n        const promise = dispatch(getAuthUserData())\n        Promise.all([promise])\n            .then(() => {\n                dispatch(initializedSuccess())\n            })\n\n    }\n}","import {addPost} from \"./profile-reducer\";\n\nexport type FriendsType = {\n    friends: Array<FriendType>\n}\n\nexport type FriendType = {\n    id: number\n    name: string\n    avatar: string\n}\n\nconst initialState = {\n    friends: [\n        {\n            id: 1,\n            name: \"Lena\",\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS0AfKY4bAlZOoZf1-lx6csbUt1LrtdMeuzLaiYapJPAVaLPdfBQSr1dOy5SRO8vev0BdE&usqp=CAU\"\n        },\n        {\n            id: 2,\n            name: \"Alex\",\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTH8C8VibswhLf3oI9Y-oEncHluuxKte7xvRw&usqp=CAU\"\n        },\n        {\n            id: 3,\n            name: \"Nastya\",\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThjiIep4R49K8xkJr_xQxVOXUvblr-wBlbGA&usqp=CAU\"\n        },\n    ]\n}\n\nexport const sidebarReducer = (state: FriendsType = initialState) => {\n    return state\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\nimport {profileReducer} from \"./profile-reducer\";\nimport {dialogReducer} from \"./dialog-reducer\";\nimport {sidebarReducer} from \"./sidebar-reducer\";\nimport {userReducer} from \"./user-reducer\";\nimport {AuthReducer} from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from \"redux-form\";\nimport {appReducer} from \"./app-reducer\";\n\nconst rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogPage: dialogReducer,\n    sidebar: sidebarReducer,\n    usersPage: userReducer,\n    auth: AuthReducer,\n    form: formReducer,\n    app: appReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport type StoreType = typeof store\n\nexport type StateType = ReturnType<typeof rootReducer>\n// @ts-ignore\nwindow.store = store;","import React, {ComponentType, Suspense} from 'react';\nimport {Preloader} from \"../common/Preloader/Preloader\";\n\n\nexport function withSuspense<T>(Component: ComponentType<T>) {\n    return (props: any) => {\n        return (\n            <Suspense fallback={<Preloader/>}>\n                <Component {...props}/>\n            </Suspense>)\n\n    }\n}","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport {NavbarContainer} from \"./components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/Login/Login\";\nimport {connect, Provider} from 'react-redux';\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {StateType, store} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./components/HOC/withSuspense\";\n\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\n\nclass App extends Component<PropsType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavbarContainer/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\ntype MapStareToPropsType = {\n    initialized: boolean\n}\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\n\nexport type PropsType = MapStareToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: StateType): MapStareToPropsType => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nconst AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App)\n\nexport const NetworkApp = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport {NetworkApp} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\n\n/*export const rerenderEntireTree = (state: StateType) => {*/\nReactDOM.render(\n    <NetworkApp/>,\n    document.getElementById('root')\n);\n/*}\n\n\nrerenderEntireTree(store.getState());\nstore.subscribe(() => {\n    const state = store.getState();\n    rerenderEntireTree(state);\n});\n*/\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formCommonError\":\"FormsControls_formCommonError__369Vb\"};","export default __webpack_public_path__ + \"static/media/preloader.d2b19a6e.gif\";","import React from 'react';\nimport preloader from './../../../assets/images/preloader.gif'\n\nexport const Preloader = () => {\n    return <>\n        <img src={preloader}/>\n    </>\n}","import React from 'react';\nimport classes from \"./FormsControls.module.css\";\n\ntype PropsType = {\n    input: any\n    meta: any\n}\n\nexport const Textarea = ({input, meta: {touched, error}, ...props}: PropsType) => {\n    const hasError = touched && error\n\n    return (\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : \"\")}>\n            <div>\n                <textarea {...input} {...props}/>\n            </div>\n            {hasError && <span>{error}</span>}\n\n        </div>\n    )\n}\n\nexport const Input = ({input, meta: {touched, error}, ...props}: PropsType) => {\n    const hasError = touched && error\n\n    return (\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : \"\")}>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {hasError && <span>{error}</span>}\n\n        </div>\n    )\n}","export const required = (value: string) => {\n\n    if (value) return undefined\n    return \"Field is required\"\n\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n    return undefined\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Pagination_selectedPage__zdDHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import {Dispatch} from \"redux\";\nimport {profileAPI, userAPI} from \"../api/api\";\n\nexport type PostType = {\n    id: number\n    message: string\n    like: number\n}\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    profile: UserProfileDataType\n    status: string\n}\ntype ContactsType = {\n    \"facebook\": null | string\n    \"website\": null | string\n    \"vk\": null | string\n    \"twitter\": null | string\n    \"instagram\": null | string\n    \"youtube\": null | string\n    \"github\": null | string\n    \"mainLink\": null | string\n}\ntype PhotosType = {\n    \"small\": null | string\n    \"large\": null | string\n}\nexport type UserProfileDataType = {\n    \"aboutMe\": null | string\n    \"contacts\": ContactsType\n    \"lookingForAJob\": boolean\n    \"lookingForAJobDescription\": null | string\n    \"fullName\": null | string\n    \"userId\": number\n    \"photos\": PhotosType\n}\n\nconst initialState = {\n    status: '',\n    posts: [\n        {id: 1, message: \"Hi, how are you?\", like: 18},\n        {id: 2, message: \"It is my first post!!!\", like: 19},\n        {id: 3, message: \"Yoooo\", like: 10},\n    ],\n    profile: {\n        \"aboutMe\": null,\n        \"contacts\": {\n            \"facebook\": null,\n            \"website\": null,\n            \"vk\": null,\n            \"twitter\": null,\n            \"instagram\": null,\n            \"youtube\": null,\n            \"github\": null,\n            \"mainLink\": null\n        },\n        \"lookingForAJob\": false,\n        \"lookingForAJobDescription\": null,\n        \"fullName\": \"NAME\",\n        \"userId\": 0,\n        \"photos\": {\n            \"small\": null,\n            \"large\": null\n        }\n    }\n}\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionTypeProfileReducer): ProfilePageType => {\n\n    switch (action.type) {\n        case 'ADD-POST':\n            let newPost = {id: 5, message: action.messagePost, like: 0}\n            return {\n                ...state,\n                posts: [newPost, ...state.posts]\n            }\n        case \"DELETE-POST\":\n            return {...state, posts: state.posts.filter(p => p.id !== action.id)}\n        case \"SET_USER_PROFILE\":\n            return {...state, profile: action.profile}\n        case \"SET_USER_STATUS\":\n            return {...state, status: action.status}\n    }\n    return state\n}\n\nexport type ActionTypeProfileReducer =\n    ReturnType<typeof addPost>\n    | ReturnType<typeof setUserProfile>\n    | ReturnType<typeof setUserStatus>\n    | ReturnType<typeof deletePost>\n\n\nexport const addPost = (text: string) => {\n    return {\n        type: 'ADD-POST',\n        messagePost: text\n    } as const\n}\n\nexport const deletePost = (id: number) => {\n    return {\n        type: 'DELETE-POST',\n        id\n    } as const\n}\n\nexport const setUserProfile = (profile: UserProfileDataType) => {\n    return {\n        type: \"SET_USER_PROFILE\",\n        profile\n    } as const\n}\n\nexport const setUserStatus = (status: string) => {\n    return {\n        type: \"SET_USER_STATUS\",\n        status\n    } as const\n}\n\nexport const getUserProfile = (userId: string) => async (dispatch: Dispatch) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getUserStatus = (userId: string) => async (dispatch: Dispatch) => {\n    const response = await profileAPI.getStatus(userId)\n    dispatch(setUserStatus(response.data))\n}\n\nexport const updateUserStatus = (status: string) => async (dispatch: Dispatch) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setUserStatus(status))\n    }\n}\n\n\n","export default __webpack_public_path__ + \"static/media/abstract-user-flat-4.b8428432.svg\";"],"sourceRoot":""}