{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","avatarDialogItem","src","avatar","nameDialogItem","activeClassName","activeLink","to","name","MessageItem","from","message","messageText","maxLenght","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","messageSend","Field","component","Textarea","validate","required","placeholder","textarea","button","compose","withAuthRedirect","connect","state","dialogs","dialogPage","messagesText","dispatch","newMessageText","sendMessageActionCreator","dialogsElements","map","d","messagesElements","m","Message","content","messages","formData","newMessageBody"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,YAAc,6BAA6B,SAAW,0BAA0B,OAAS,0B,oBCAtND,EAAOC,QAAU,CAAC,OAAS,2BAA2B,eAAiB,mCAAmC,iBAAmB,qCAAqC,WAAa,iC,oBCA/KD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,4B,oGCuB7HC,EAb8B,SAACC,GAC1C,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,sBAAKC,UAAWC,IAAQC,OAAxB,UAEQ,qBAAKF,UAAWC,IAAQE,iBAAkBC,IAAKP,EAAMQ,SAEzD,cAAC,IAAD,CAASL,UAAWC,IAAQK,eAAgBC,gBAAiBN,IAAQO,WAAYC,GAAIX,EAArF,SAA4FD,EAAMa,W,kBCD/FC,EARgC,SAACd,GAC5C,OACI,qBAAKG,UAAS,UAAKC,IAAQU,YAAb,YAA4BV,IAAQJ,EAAMe,OAAxD,SACI,qBAAKZ,UAAWC,IAAQY,QAAxB,SAAkChB,EAAMiB,iB,kCCF9CC,EAAYC,YAAiB,IAetBC,EAAsBC,YAAwB,CAACC,KAAM,wBAA/BD,EAb+B,SAACrB,GAC/D,OACI,uBAAMuB,SAAUvB,EAAMwB,aAAcrB,UAAWC,IAAQqB,YAAvD,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBL,KAAM,iBACNkB,YAAa,qBACb5B,UAAWC,IAAQ4B,WAC1B,wBAAQ7B,UAAWC,IAAQ6B,OAA3B,4B,gCCmBGC,sBAAuBC,IAAkBC,aAfhC,SAACC,GACrB,MAAO,CACHC,QAASD,EAAME,WAAWD,QAC1BE,aAAcH,EAAME,WAAWC,iBAIZ,SAACC,GACxB,MAAO,CACHhB,YAAa,SAACiB,GACVD,EAASE,YAAyBD,SAK/BR,EChCQ,SAAClC,GAEpB,IAAM4C,EAAkB5C,EAAMsC,QAAQO,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CACY5C,GAAI4C,EAAE5C,GACNW,KAAMiC,EAAEjC,KACRL,OAAQsC,EAAEtC,QAHLsC,EAAE5C,OAK9D6C,EAAmB/C,EAAMwC,aAAaK,KAAI,SAACG,GAAD,OAAO,cAACC,EAAD,CACahC,YAAa+B,EAAE/B,YACfF,KAAMiC,EAAEjC,MAFHiC,EAAE9C,OASzE,OACI,sBAAKC,UAAWC,IAAQ8C,QAAxB,UACI,qBAAK/C,UAAWC,IAAQkC,QAAxB,SACKM,IAEL,qBAAKzC,UAAWC,IAAQ+C,SAAxB,SACI,gCACKJ,EACD,cAAC3B,EAAD,CAAqBG,SAbf,SAAC6B,GACnBpD,EAAMyB,YAAY2B,EAASC","file":"static/js/3.6144c0b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__1VIii\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\",\"messageSend\":\"Dialogs_messageSend__3tB2u\",\"textarea\":\"Dialogs_textarea__PRKXN\",\"button\":\"Dialogs_button__UnW0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"nameDialogItem\":\"DialogItem_nameDialogItem__1IDA8\",\"avatarDialogItem\":\"DialogItem_avatarDialogItem__-MRoC\",\"activeLink\":\"DialogItem_activeLink__1IQU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageItem\":\"Message_MessageItem__2sLLT\",\"message\":\"Message_message__1MOXo\",\"sender\":\"Message_sender__bbOdk\",\"receiver\":\"Message_receiver__2Fu_w\"};","import React from 'react';\nimport classes from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n\ntype DialogItemType = {\n    id: number\n    name: string\n    avatar: string\n}\n\nconst DialogItem: React.FC<DialogItemType> = (props) => {\n    let path = '/dialogs/' + props.id\n    return (\n        <div className={classes.dialog}>\n\n                <img className={classes.avatarDialogItem} src={props.avatar}/>\n             {/*   <NavLink className={classes.nameDialogItem} to={path}>{props.name}</NavLink>*/}\n            <NavLink className={classes.nameDialogItem} activeClassName={classes.activeLink} to={path}>{props.name}</NavLink>\n\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport classes from './Message.module.css';\n\n\ntype MessageItemType = {\n    messageText: string\n    from: string\n}\n\nconst MessageItem: React.FC<MessageItemType> = (props) => {\n    return (\n        <div className={`${classes.MessageItem} ${classes[props.from]}`}>\n            <div className={classes.message}>{props.messageText}</div>\n        </div>\n    )\n}\n\nexport default MessageItem;","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport classes from './Dialogs.module.css';\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nexport type FormDataType = {\n    newMessageBody: string\n}\n\nconst maxLenght = maxLengthCreator(50)\n\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={classes.messageSend}>\n            <Field component={Textarea}\n                   validate={[required, maxLenght]}\n                   name={\"newMessageBody\"}\n                   placeholder={\"Enter your message\"}\n                   className={classes.textarea}/>\n            <button className={classes.button}>Send++++</button>\n        </form>\n    )\n}\n\nexport const AddMessageReduxForm = reduxForm<FormDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React, {ComponentType} from 'react';\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {\n    ActionTypeDialogReducer,\n    DialogType,\n    MessageTextType, sendMessageActionCreator\n} from \"../../redux/dialog-reducer\";\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\nimport {compose} from 'redux';\n\ntype MapStareToPropsType = {\n    dialogs: DialogType[]\n    messagesText: MessageTextType[]\n}\n\ntype MapDispatchToPropsType = {\n    messageSend: (newMessageText: string) => void\n}\n\nexport type DialogsPropsType = MapStareToPropsType & MapDispatchToPropsType\n\n\nconst mapStareToProps = (state: StateType): MapStareToPropsType => {\n    return {\n        dialogs: state.dialogPage.dialogs,\n        messagesText: state.dialogPage.messagesText,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: (action: ActionTypeDialogReducer) => void): MapDispatchToPropsType => {\n    return {\n        messageSend: (newMessageText: string) => {\n            dispatch(sendMessageActionCreator(newMessageText))\n        }\n    }\n}\n\nexport default compose<ComponentType>(withAuthRedirect, connect(mapStareToProps, mapDispatchToProps))(Dialogs)\n\n","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./Message/Message\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\nimport {AddMessageReduxForm, FormDataType} from \"./AddMessageForm\";\n\nexport const Dialogs = (props: DialogsPropsType) => {\n\n    const dialogsElements = props.dialogs.map(d => <DialogItem key={d.id}\n                                                               id={d.id}\n                                                               name={d.name}\n                                                               avatar={d.avatar}/>)\n\n    let messagesElements = props.messagesText.map((m) => <MessageItem key={m.id}\n                                                                      messageText={m.messageText}\n                                                                      from={m.from}/>)\n\n    const addNewMessage = (formData: FormDataType) => {\n        props.messageSend(formData.newMessageBody)\n    }\n\n\n    return (\n        <div className={classes.content}>\n            <div className={classes.dialogs}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                <div>\n                    {messagesElements}\n                    <AddMessageReduxForm onSubmit={addNewMessage}/>\n                </div>\n\n            </div>\n        </div>\n    )\n}"],"sourceRoot":""}